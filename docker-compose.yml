version: "2"

networks:
  backend:
    driver: bridge

services:
  # TODO
  # redis:

  postgres:
    container_name: my-films-postgres
    image: postgres:10-alpine
    environment:
      POSTGRES_PASSWORD: changeme
      POSTGRES_USER: postgres
      POSTGRES_DB: my-films
    # volumes:
    ports:
      - 5432:5432
    networks:
      - backend

  api:
    container_name: my-films-api
    build:
      context: services/api
    volumes:
      - ./services/api:/usr/api
    entrypoint: /bin/sh
    command: -s
    tty: true
    ports:
      - 3000:3000
      - 9229:9229 # for debug
    environment:
      NODE_ENV: development
      POSTGRES_PASSWORD: changeme
      POSTGRES_USER: postgres
      POSTGRES_DB: my-films
      POSTGRES_HOST: my-films-postgres
      APP_HOST: 127.0.0.1
      # GOOGLE_CLIENT_ID: ### .env.local ###
      # GOOGLE_CLIENT_SECRET: ### .env.local ###
    networks:
      - backend

  synchronizer:
    container_name: my-films-synchronizer
    build:
      context: services/synchronizer
    volumes:
      - ./services/synchronizer:/usr/synchronizer
    entrypoint: /bin/sh
    command: -s
    tty: true
    ports:
      - 9239:9239 # for debug
    environment:
      API_HOST: my-films-api/internail
      DEBUG: app:*
      # TMDB_API_KEY_V3
    env_file:
      - ./services/synchronizer/docker.env
    networks:
      - backend
